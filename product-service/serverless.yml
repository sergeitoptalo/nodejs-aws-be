service: product-service

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    SQS_URL:
      Ref: SQSQueue
  iamRoleStatements:
    - Effect: 'Allow'
      Action: 'sqs:*'
      Resource:
        - Fn::GetAtt: [SQSQueue, Arn]

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

package:
#  include:
#    - include-me.js
#    - include-me-dir/**
  exclude:
    - build/**
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: /products
          method: get
          cors: true
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: /products/{id}
          method: get
          cors: true
  addProduct:
    handler: handler.addProduct
    events:
      - http:
          path: /products
          method: post
          cors: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalog-items-queue

  Outputs:
    CatalogItemsQueue:
      Value:
        Ref: SQSQueue
      Export:
        Name: CatalogItemsSQSQueue
    CatalogItemsQueueARN:
      Value:
        Fn::GetAtt:
          - SQSQueue
          - Arn
      Export:
        Name: CatalogItemsSQSQueueARN
